# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: js-sdk

on:
  push:
    branches: [ development_vdc_test_backup ]

# on:
#   push:
#     branches: [ development ]
#     paths:
#     - '**.py'
#     - '.github/workflows/**.yml'
#     - 'pyproject.toml'
#     - 'poetry.lock'
#   pull_request:
#     branches: [ development ]
#     paths:
#     - '**.py'
#     - '.github/workflows/**.yml'
#     - 'pyproject.toml'
#     - 'poetry.lock'

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@master
      - name: Gathering deps
        run: |
          sudo apt-get update
          sudo apt-get install -y git python3-pip python3-venv python3-setuptools tmux redis restic nginx cron
          sudo service redis stop
          sudo service nginx stop
          sudo pip3 install poetry
          sudo poetry run pip3 install pytest selenium
      - name: Install
        run: |
          sudo poetry install
      - name: Run tests
        env:
          TNAME: ${{ secrets.TNAME }}
          EMAIL: ${{ secrets.EMAIL }}
          WORDS: ${{ secrets.WORDS }}
          WALLET_SECRET: ${{ secrets.WALLET_SECRET }}
          FAKE_EMAIL: ${{ secrets.FAKE_EMAIL }}
          FAKE_GITHUB_TOKEN: ${{ secrets.FAKE_GITHUB_TOKEN }}
          S3_URL: ${{ secrets.S3_URL }}
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
          S3_AK: ${{ secrets.S3_AK }}
          S3_SK: ${{ secrets.S3_SK }}
        run: |
          sudo --preserve-env=TNAME --preserve-env=EMAIL --preserve-env=WORDS --preserve-env=WALLET_SECRET --preserve-env=FAKE_EMAIL --preserve-env=FAKE_GITHUB_TOKEN --preserve-env=S3_URL --preserve-env=S3_BUCKET --preserve-env=S3_AK --preserve-env=S3_SK \
          poetry run pytest tests/sals/vdc/test_vdc_backup.py -sv
